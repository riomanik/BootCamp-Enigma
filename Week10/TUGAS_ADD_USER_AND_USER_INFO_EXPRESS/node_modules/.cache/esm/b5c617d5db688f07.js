let getRepository,Product;_db6‍.x([["default",()=>ProductRepository]]);_db6‍.w("typeorm",[["getRepository",["getRepository"],function(v){getRepository=v}]]);_db6‍.w("../model/product.model",[["default",["Product"],function(v){Product=v}]]);


               class ProductRepository {
  productRepository() {
    return getRepository(Product);
  }

  async findAllProduct() {
    const product = await this.productRepository().find();
    return product;
  }

  async findOne(id) {
    const product = await this.productRepository().findByIds(id);
    return product;
  }

  async saveProduct(product) {
    const saveProduct = await this.productRepository().save(product);
    return saveProduct;
  }
  async updateProduct(product) {
    const updateProduct = await this.productRepository().save(product);
    return updateProduct;
  }
  async deleteProduct(product) {
    const deleteProduct = await this.productRepository().delete(product);
    return deleteProduct;
  }
  async disableProduct(product) {
    let productWantDisable = await {
      productId: product[0].productId,
      productName: product[0].productName,
      price: product[0].price,
      status: {
        idStatus: 2
      },
      category: product[0].category
    };
    const deleteProduct = await this.productRepository().save(
      productWantDisable
    );
    return deleteProduct;
  }
}
